name: "xclim Testing Suite"

on:
  push:
    branches:
      - master
    paths-ignore:
      - HISTORY.rst
      - setup.cfg
      - setup.py
      - xclim/__init__.py
  pull_request:

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install tox
        run: pip install tox
      - name: Run linting suite
        run: tox -e black

  doctests:
    needs: black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install pylint
        run: pip install pylint
      - name: Run pylint
        run: pylint --rcfile=pylintrc --disable=import-error --exit-zero xclim
      - name: Install tox
        run: pip install tox
      - name: Run doctests
        run: tox -e doctests_only

  test-py38-upstream-dev-dependencies:
    needs: black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install tox
        run: pip install tox
      - name: Test with tox
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: tox -e py38-upstream-lm3
      - name: report coverage
        uses: AndreMiras/coveralls-python-action@develop
        with:
          flag-name: run-py38-xarray-lm3
          parallel: true

  test-py38-opt-slow-conda:
    needs: black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          activate-environment: sbck-experimental
          channels: conda-forge,defaults
          mamba-version: "*"
          python-version: "3.8"
      - name: Install tox
        shell: bash -l {0}
        run: mamba install -n sbck-experimental tox-conda tox
      - name: Test with tox
        shell: bash -l {0}
        run: |
          conda activate sbck-experimental
          tox -e opt-slow
        env:
          CONDA_EXE: mamba
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: report coverage
        uses: AndreMiras/coveralls-python-action@develop
        with:
          flag-name: run-sbck
          parallel: true

  tests:
    needs: black
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
#          - tox-env: py38-xarray-lm3
#            python-version: "3.8"
          - tox-env: py39-slow-lm3
            python-version: "3.9"
          # Warning: Bottleneck does not yet officially support PEP 405
          # https://github.com/pydata/bottleneck/issues/348#issuecomment-776165418
          - tox-env: py310
            python-version: "3.10-dev"
    steps:
      - uses: actions/checkout@v3
      # Python3.10-dev headers not available in Ubuntu-20.04 Bionic
      - name: Set up Python3.10 (deadsnakes version)
        if: "endsWith(matrix.python-version, '-dev')"
        uses: deadsnakes/action@v2.1.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Python ${{ matrix.python-version }}
        if: "!endsWith(matrix.python-version, '-dev')"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: pip install tox
      - name: Test with tox
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: tox -e ${{ matrix.tox-env }}
      - name: report coverage
        uses: AndreMiras/coveralls-python-action@develop
        with:
          flag-name: run-${{ matrix.tox-env }}
          parallel: true

  finish:
    needs:
      - tests
      - doctests
      - test-py38-opt-slow-conda
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel-finished: true
